#ifndef MARS_EXPLORER_
#define MARS_EXPLORER_

#include <string>
#include <vector>
#include <map>

typedef enum {
    LEFT, RIGHT, FORWARD
} Moving;


class Position
{
private:
    typedef struct {
        int x;
        int y;
    } Coordinate;

    typedef enum {
        EAST, SOURTH, WEST, NORTH
    } Direction;

public:
    Position(int x, int y);
    Position &move(Position &start, Moving &moving);
    void set_boundary(int x, int y);
private:
    Coordinate boundary;
    
};

class Grid
{
public:
    Position move(Position begin, Direction direction);
private:
    Coordinate boundary;
};

class MarsExplorer
{
public:
    Position &walk_through(std::string &move_orders);
    void init_position(void);
    void translate_path(std::string &move_orders);
private:
    Position start;
    std::vector<Moving> movings;
};

#endif
